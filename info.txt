0. Общее
В качестве backend фреймворка выбран django, потому что:
- несколько последних проектов я делал на нем;
- это сэкономит мне время на реализацию тестового задания.


1. Проектирование схемы БД.
* paste
- текст (текст)
- время доступности (дата и время)
- внешний ключ на список времени доступности
  Если без внешнего ключа, то нарушается единообразие рендера и валидации select, но нет избыточности данных.
  Выбираю избыточность данных против нарушения единообразия.
  Так же это позволит сохранить дополнительную информацию о том, на сколько была размещена паста, в противном случаи
  эта информация теряется.
- link_access (bool)

* AccessTime
  - текст для select
    Можно генерировать автоматически по заданным секундам, но не делаю так потому что:
    - есть вариант "без ограничения";
    - предпочтительней оставить свободу выбора в варианте написания контент-менеджеру
  - кол-во секунд


2. Прототипы страниц
* главная
  - ссылка на добавление пасты
  - список последних 10 паст

* добавление пасты
  - форма добавления пасты
  - список последних 10 паст

* просмотр пасты
  - текст пасты
  - список последних 10 паст

* паста не найдета или более недоступна
  - сообщеине
  - список последних 10 паст

Для DRY при отображении списка последних 10 паст:
- добавлен контекстный процессор;
- рендеринг списка вынесен в базовый шаблон.


3. Логика
Хэш для пасты считается от id или от текста пасты + случайное число для предотвращения коллизии между двумя пастами с
одним содержанием.

В задании сказано о выводе последних 10 публичных паст, без учета их недоступности по времени. Учитываю.

В задании не сказано о скрытии приватных паст из списка последних 10 паст. Скрываю все приватные, так как это
оптимальный вариатн.


4. Тесты
- создание аккаунта
- вход в аккаунт
- время доступности пасты
- приватная паста

5. Развертывание
докер наше все












